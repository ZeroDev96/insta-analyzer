{"ast":null,"code":"var _jsxFileName = \"/Users/eric.notts/Documents/Dev_Projects/instagram-analyzer/instagram-analyzer-frontend/src/components/UploadForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, TextField, Typography } from '@mui/material';\nimport { uploadPhoto } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [photo, setPhoto] = useState(null);\n  const [prompt, setPrompt] = useState('');\n  const [description, setDescription] = useState('');\n  const [analysisResult, setAnalysisResult] = useState(null); // State to store the result\n\n  const handlePhotoChange = event => {\n    if (event.target.files && event.target.files.length > 0) {\n      setPhoto(event.target.files[0]);\n    }\n  };\n  const handleSubmit = async () => {\n    if (photo) {\n      const formData = new FormData();\n      formData.append('photo', photo);\n      formData.append('prompt', prompt);\n      if (description) {\n        formData.append('description', description);\n      }\n      try {\n        const response = await uploadPhoto(formData);\n        setAnalysisResult(response.data); // Store the response data in state\n      } catch (error) {\n        console.error('Error uploading photo:', error);\n      }\n    } else {\n      console.log('No photo selected');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: 2,\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Upload Photo for Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Prompt\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value),\n      fullWidth: true,\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Description (optional)\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      fullWidth: true,\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      component: \"label\",\n      children: [\"Select Photo\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        hidden: true,\n        accept: \"image/*\",\n        onChange: handlePhotoChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleSubmit,\n      disabled: !photo,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), analysisResult && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Analysis Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [\"Score: \", analysisResult.analysis.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [\"Recommendations: \", analysisResult.analysis.recommendations]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:3000${analysisResult.filePath}`,\n        alt: \"Uploaded\",\n        style: {\n          maxWidth: '100%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadForm, \"vDRMAc7Fgv6rgtw/NlP6KGUfCaQ=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","Box","Button","TextField","Typography","uploadPhoto","jsxDEV","_jsxDEV","UploadForm","_s","photo","setPhoto","prompt","setPrompt","description","setDescription","analysisResult","setAnalysisResult","handlePhotoChange","event","target","files","length","handleSubmit","formData","FormData","append","response","data","error","console","log","sx","display","flexDirection","alignItems","gap","mt","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","e","fullWidth","component","type","hidden","accept","onClick","disabled","analysis","score","recommendations","src","filePath","alt","style","maxWidth","height","_c","$RefreshReg$"],"sources":["/Users/eric.notts/Documents/Dev_Projects/instagram-analyzer/instagram-analyzer-frontend/src/components/UploadForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Button, TextField, Typography } from '@mui/material';\nimport { uploadPhoto } from '../services/api';\n\nconst UploadForm: React.FC = () => {\n    const [photo, setPhoto] = useState<File | null>(null);\n    const [prompt, setPrompt] = useState<string>('');\n    const [description, setDescription] = useState<string>('');\n    const [analysisResult, setAnalysisResult] = useState<any>(null); // State to store the result\n\n    const handlePhotoChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.files && event.target.files.length > 0) {\n            setPhoto(event.target.files[0]);\n        }\n    };\n\n    const handleSubmit = async () => {\n        if (photo) {\n            const formData = new FormData();\n            formData.append('photo', photo);\n            formData.append('prompt', prompt);\n            if (description) {\n                formData.append('description', description);\n            }\n            try {\n                const response = await uploadPhoto(formData);\n                setAnalysisResult(response.data); // Store the response data in state\n            } catch (error) {\n                console.error('Error uploading photo:', error);\n            }\n        } else {\n            console.log('No photo selected');\n        }\n    };\n\n    return (\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2, mt: 4 }}>\n            <Typography variant=\"h5\">Upload Photo for Analysis</Typography>\n            <TextField\n                label=\"Prompt\"\n                value={prompt}\n                onChange={(e) => setPrompt(e.target.value)}\n                fullWidth\n                variant=\"outlined\"\n            />\n            <TextField\n                label=\"Description (optional)\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                fullWidth\n                variant=\"outlined\"\n            />\n            <Button variant=\"contained\" component=\"label\">\n                Select Photo\n                <input type=\"file\" hidden accept=\"image/*\" onChange={handlePhotoChange} />\n            </Button>\n            <Button variant=\"contained\" onClick={handleSubmit} disabled={!photo}>\n                Submit\n            </Button>\n\n            {analysisResult && (\n                <Box sx={{ mt: 4 }}>\n                    <Typography variant=\"h6\">Analysis Result</Typography>\n                    <Typography variant=\"body1\">Score: {analysisResult.analysis.score}</Typography>\n                    <Typography variant=\"body1\">Recommendations: {analysisResult.analysis.recommendations}</Typography>\n                    <img src={`http://localhost:3000${analysisResult.filePath}`} alt=\"Uploaded\" style={{ maxWidth: '100%', height: 'auto' }} />\n                </Box>\n            )}\n        </Box>\n    );\n};\n\nexport default UploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}