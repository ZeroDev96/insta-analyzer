{"ast":null,"code":"import React,{useState}from'react';import{Box,Button,TextField,Typography,Card,CardContent,CardMedia,Grid}from'@mui/material';import{uploadPhoto}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UploadForm=()=>{const[photos,setPhotos]=useState([]);const[previewUrls,setPreviewUrls]=useState([]);const[analysisResults,setAnalysisResults]=useState([]);const handlePhotoChange=event=>{if(event.target.files&&event.target.files.length>0){const selectedPhotos=Array.from(event.target.files);setPhotos(selectedPhotos);// Generate preview URLs for the selected photos\nconst urls=selectedPhotos.map(photo=>URL.createObjectURL(photo));setPreviewUrls(urls);}};const handleSubmit=async()=>{if(photos.length>0){const results=[];for(const photo of photos){const formData=new FormData();formData.append('photo',photo);try{const response=await uploadPhoto(formData);results.push(response.data);}catch(error){console.error('Error uploading photo:',error);}}setAnalysisResults(results);}else{console.log('No photos selected');}};return/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',gap:4,mt:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Upload Photos for Analysis\"}),/*#__PURE__*/_jsx(TextField,{label:\"Prompt\",fullWidth:true,variant:\"outlined\"}),/*#__PURE__*/_jsx(TextField,{label:\"Description (optional)\",fullWidth:true,variant:\"outlined\"}),/*#__PURE__*/_jsxs(Button,{variant:\"contained\",component:\"label\",children:[\"Select Photos (\",photos.length,\" selected)\",/*#__PURE__*/_jsx(\"input\",{type:\"file\",hidden:true,accept:\"image/*\",onChange:handlePhotoChange,multiple:true})]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleSubmit,disabled:photos.length===0,children:\"Submit\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,sx:{mt:2},children:previewUrls.map((url,index)=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,lg:3,children:/*#__PURE__*/_jsxs(Card,{sx:{width:'100%'},children:[/*#__PURE__*/_jsx(CardMedia,{component:\"img\",alt:`Photo Preview ${index+1}`,height:\"150\",image:url// URL to the image\n,title:`Photo Preview ${index+1}`,sx:{objectFit:'cover'}// Ensures the image covers the entire thumbnail area\n}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"textSecondary\",align:\"center\",children:[\"Image \",index+1,\" \"]})})]})},index))}),analysisResults.map((result,index)=>/*#__PURE__*/_jsxs(Card,{sx:{maxWidth:800,mt:4},children:[/*#__PURE__*/_jsx(CardMedia,{component:\"img\",alt:`Uploaded Photo ${index+1}`,height:\"400\",image:`http://localhost:3000${result.filePath}`,title:`Uploaded Photo ${index+1}`}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[\"Analysis Result for Image \",index+1]}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"Recommendations:\"}),/*#__PURE__*/_jsx(\"ul\",{children:result.analysis.recommendations.split(',').map((recommendation,idx)=>/*#__PURE__*/_jsx(\"li\",{children:recommendation.trim()},idx))})]})})]})]},index))]});};export default UploadForm;","map":{"version":3,"names":["React","useState","Box","Button","TextField","Typography","Card","CardContent","CardMedia","Grid","uploadPhoto","jsx","_jsx","jsxs","_jsxs","UploadForm","photos","setPhotos","previewUrls","setPreviewUrls","analysisResults","setAnalysisResults","handlePhotoChange","event","target","files","length","selectedPhotos","Array","from","urls","map","photo","URL","createObjectURL","handleSubmit","results","formData","FormData","append","response","push","data","error","console","log","sx","display","flexDirection","alignItems","gap","mt","children","variant","gutterBottom","label","fullWidth","component","type","hidden","accept","onChange","multiple","onClick","disabled","container","spacing","url","index","item","xs","sm","md","lg","width","alt","height","image","title","objectFit","color","align","result","maxWidth","filePath","analysis","recommendations","split","recommendation","idx","trim"],"sources":["/Users/eric.notts/Documents/Dev_Projects/instagram-analyzer/instagram-analyzer-frontend/src/components/UploadForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Button, TextField, Typography, Card, CardContent, CardMedia, Grid } from '@mui/material';\nimport { uploadPhoto } from '../services/api';\n\nconst UploadForm: React.FC = () => {\n    const [photos, setPhotos] = useState<File[]>([]);\n    const [previewUrls, setPreviewUrls] = useState<string[]>([]);\n    const [analysisResults, setAnalysisResults] = useState<any[]>([]);\n\n    const handlePhotoChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.files && event.target.files.length > 0) {\n            const selectedPhotos = Array.from(event.target.files);\n            setPhotos(selectedPhotos);\n\n            // Generate preview URLs for the selected photos\n            const urls = selectedPhotos.map(photo => URL.createObjectURL(photo));\n            setPreviewUrls(urls);\n        }\n    };\n\n    const handleSubmit = async () => {\n        if (photos.length > 0) {\n            const results = [];\n            for (const photo of photos) {\n                const formData = new FormData();\n                formData.append('photo', photo);\n                try {\n                    const response = await uploadPhoto(formData);\n                    results.push(response.data);\n                } catch (error) {\n                    console.error('Error uploading photo:', error);\n                }\n            }\n            setAnalysisResults(results);\n        } else {\n            console.log('No photos selected');\n        }\n    };\n\n    return (\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 4, mt: 4 }}>\n            <Typography variant=\"h5\" gutterBottom>Upload Photos for Analysis</Typography>\n            <TextField\n                label=\"Prompt\"\n                fullWidth\n                variant=\"outlined\"\n            />\n            <TextField\n                label=\"Description (optional)\"\n                fullWidth\n                variant=\"outlined\"\n            />\n            <Button variant=\"contained\" component=\"label\">\n                Select Photos ({photos.length} selected)\n                <input type=\"file\" hidden accept=\"image/*\" onChange={handlePhotoChange} multiple />\n            </Button>\n            <Button variant=\"contained\" onClick={handleSubmit} disabled={photos.length === 0}>\n                Submit\n            </Button>\n\n            {/* Display thumbnails in a grid layout with captions */}\n            <Grid container spacing={2} sx={{ mt: 2 }}>\n                {previewUrls.map((url, index) => (\n                    <Grid item xs={12} sm={6} md={4} lg={3} key={index}>\n                        <Card sx={{ width: '100%' }}>\n                            <CardMedia\n                                component=\"img\"\n                                alt={`Photo Preview ${index + 1}`}\n                                height=\"150\"\n                                image={url} // URL to the image\n                                title={`Photo Preview ${index + 1}`}\n                                sx={{ objectFit: 'cover' }} // Ensures the image covers the entire thumbnail area\n                            />\n                            <CardContent>\n                                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                                    Image {index + 1} {/* Add a caption with the image number */}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n\n            {/* Display analysis results below the thumbnails */}\n            {analysisResults.map((result, index) => (\n                <Card sx={{ maxWidth: 800, mt: 4 }} key={index}>\n                    <CardMedia\n                        component=\"img\"\n                        alt={`Uploaded Photo ${index + 1}`}\n                        height=\"400\"\n                        image={`http://localhost:3000${result.filePath}`}\n                        title={`Uploaded Photo ${index + 1}`}\n                    />\n                    <CardContent>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Analysis Result for Image {index + 1}\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <Typography variant=\"body1\">\n                                    Recommendations:\n                                </Typography>\n                                <ul>\n                                    {result.analysis.recommendations.split(',').map((recommendation: string, idx: number) => (\n                                        <li key={idx}>{recommendation.trim()}</li>\n                                    ))}\n                                </ul>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            ))}\n        </Box>\n    );\n};\n\nexport default UploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}