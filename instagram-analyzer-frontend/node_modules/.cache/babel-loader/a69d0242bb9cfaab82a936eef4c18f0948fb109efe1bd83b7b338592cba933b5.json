{"ast":null,"code":"var _jsxFileName = \"/Users/eric.notts/Documents/Dev_Projects/instagram-analyzer/instagram-analyzer-frontend/src/components/UploadForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, TextField, Typography, Card, CardContent, CardMedia, Grid, List, ListItem, ListItemText } from '@mui/material';\nimport { uploadPhoto } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [photos, setPhotos] = useState([]);\n  const [prompt, setPrompt] = useState('');\n  const [description, setDescription] = useState('');\n  const [analysisResults, setAnalysisResults] = useState([]);\n  const handlePhotoChange = event => {\n    if (event.target.files && event.target.files.length > 0) {\n      setPhotos(Array.from(event.target.files)); // Handle multiple file uploads\n    }\n  };\n  const handleSubmit = async () => {\n    if (photos.length > 0) {\n      const results = [];\n      for (const photo of photos) {\n        const formData = new FormData();\n        formData.append('photo', photo);\n        formData.append('prompt', prompt);\n        if (description) {\n          formData.append('description', description);\n        }\n        try {\n          const response = await uploadPhoto(formData);\n          results.push(response.data);\n        } catch (error) {\n          console.error('Error uploading photo:', error);\n        }\n      }\n      setAnalysisResults(results); // Store all results in state\n    } else {\n      console.log('No photos selected');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: 4,\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Upload Photos for Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Prompt\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value),\n      fullWidth: true,\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Description (optional)\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      fullWidth: true,\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      component: \"label\",\n      children: [\"Select Photos (\", photos.length, \" selected) \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        hidden: true,\n        accept: \"image/*\",\n        onChange: handlePhotoChange,\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleSubmit,\n      disabled: photos.length === 0,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), analysisResults.map((result, index) => /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 800,\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        alt: `Uploaded Photo ${index + 1}`,\n        height: \"400\",\n        image: `http://localhost:3000${result.filePath}`,\n        title: `Uploaded Photo ${index + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Analysis Result for Photo \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(List, {\n              children: result.analysis.recommendations.split(',').map((recommendation, idx) => /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: recommendation.trim()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 45\n                }, this)\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadForm, \"WkPtHXdUqZ4NOISMZPyBRHa5ZNU=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","Box","Button","TextField","Typography","Card","CardContent","CardMedia","Grid","List","ListItem","ListItemText","uploadPhoto","jsxDEV","_jsxDEV","UploadForm","_s","photos","setPhotos","prompt","setPrompt","description","setDescription","analysisResults","setAnalysisResults","handlePhotoChange","event","target","files","length","Array","from","handleSubmit","results","photo","formData","FormData","append","response","push","data","error","console","log","sx","display","flexDirection","alignItems","gap","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","e","fullWidth","component","type","hidden","accept","multiple","onClick","disabled","map","result","index","maxWidth","alt","height","image","filePath","title","container","spacing","item","xs","analysis","recommendations","split","recommendation","idx","primary","trim","_c","$RefreshReg$"],"sources":["/Users/eric.notts/Documents/Dev_Projects/instagram-analyzer/instagram-analyzer-frontend/src/components/UploadForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Button, TextField, Typography, Card, CardContent, CardMedia, Grid, List, ListItem, ListItemText } from '@mui/material';\nimport { uploadPhoto } from '../services/api';\n\nconst UploadForm: React.FC = () => {\n    const [photos, setPhotos] = useState<File[]>([]);\n    const [prompt, setPrompt] = useState<string>('');\n    const [description, setDescription] = useState<string>('');\n    const [analysisResults, setAnalysisResults] = useState<any[]>([]);\n\n    const handlePhotoChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.files && event.target.files.length > 0) {\n            setPhotos(Array.from(event.target.files)); // Handle multiple file uploads\n        }\n    };\n\n    const handleSubmit = async () => {\n        if (photos.length > 0) {\n            const results = [];\n            for (const photo of photos) {\n                const formData = new FormData();\n                formData.append('photo', photo);\n                formData.append('prompt', prompt);\n                if (description) {\n                    formData.append('description', description);\n                }\n                try {\n                    const response = await uploadPhoto(formData);\n                    results.push(response.data);\n                } catch (error) {\n                    console.error('Error uploading photo:', error);\n                }\n            }\n            setAnalysisResults(results); // Store all results in state\n        } else {\n            console.log('No photos selected');\n        }\n    };\n\n    return (\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 4, mt: 4 }}>\n            <Typography variant=\"h5\" gutterBottom>Upload Photos for Analysis</Typography>\n            <TextField\n                label=\"Prompt\"\n                value={prompt}\n                onChange={(e) => setPrompt(e.target.value)}\n                fullWidth\n                variant=\"outlined\"\n            />\n            <TextField\n                label=\"Description (optional)\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                fullWidth\n                variant=\"outlined\"\n            />\n            <Button variant=\"contained\" component=\"label\">\n                Select Photos ({photos.length} selected) {/* Show count of selected photos */}\n                <input type=\"file\" hidden accept=\"image/*\" onChange={handlePhotoChange} multiple />\n            </Button>\n            <Button variant=\"contained\" onClick={handleSubmit} disabled={photos.length === 0}>\n                Submit\n            </Button>\n\n            {analysisResults.map((result, index) => (\n                <Card sx={{ maxWidth: 800, mt: 4 }} key={index}>\n                    <CardMedia\n                        component=\"img\"\n                        alt={`Uploaded Photo ${index + 1}`}\n                        height=\"400\"\n                        image={`http://localhost:3000${result.filePath}`}\n                        title={`Uploaded Photo ${index + 1}`}\n                    />\n                    <CardContent>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Analysis Result for Photo {index + 1}\n                        </Typography>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <List>\n                                    {result.analysis.recommendations.split(',').map((recommendation: string, idx: number) => (\n                                        <ListItem key={idx}>\n                                            <ListItemText primary={recommendation.trim()} />\n                                        </ListItem>\n                                    ))}\n                                </List>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            ))}\n        </Box>\n    );\n};\n\nexport default UploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}